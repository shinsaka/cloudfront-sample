AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  cloudfront-hosting-sample

Parameters:
  OriginBucket:
    Type: String
    Description: "Origin Bucket"

Resources:
  CloudFrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Origins:
        -
          DomainName: !Sub "${S3BucketWebContents}.s3.${AWS::Region}.amazonaws.com"
          Id: !Sub "${S3BucketWebContents}.origin"
          OriginPath: ""
          OriginAccessControlId: !Ref CloudFrontOriginAccessControlWebContents
          S3OriginConfig:
            OriginAccessIdentity: ""
          ConnectionAttempts: 3
          ConnectionTimeout: 10
        DefaultCacheBehavior:
          AllowedMethods:
          - "HEAD"
          - "GET"
          CachedMethods:
          - "HEAD"
          - "GET"
          Compress: true
          SmoothStreaming: false
          TargetOriginId: !Sub "${S3BucketWebContents}.origin"
          ViewerProtocolPolicy: "redirect-to-https"
          CachePolicyId: "658327ea-f89d-4fab-a63d-7e88639e58f6"
        Comment: ""
        PriceClass: "PriceClass_All"
        Enabled: true
        Restrictions:
          GeoRestriction:
            RestrictionType: "none"
        HttpVersion: "http2"
        DefaultRootObject: "index.html"
        IPV6Enabled: true
        Logging:
          Bucket: !Sub "${S3BucketLog}.s3.amazonaws.com"
          IncludeCookies: true
          Prefix: "cloudfront/"
  CloudFrontOriginAccessControlWebContents:
    Type: "AWS::CloudFront::OriginAccessControl"
    Properties:
      OriginAccessControlConfig:
        Name: !Sub "webcall-web-page-oac-${AWS::StackName}"
        OriginAccessControlOriginType: "s3"
        SigningBehavior: "always"
        SigningProtocol: "sigv4"
        Description: ""

  S3BucketWebContents:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Sub ${OriginBucket}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        -
          ServerSideEncryptionByDefault:
            SSEAlgorithm: "AES256"
          BucketKeyEnabled: true
      OwnershipControls:
        Rules:
        -
          ObjectOwnership: "BucketOwnerEnforced"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  S3BucketWebContentsPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref S3BucketWebContents
      PolicyDocument:
        Version: "2012-10-17"
        Id: "PolicyForCloudFrontPrivateContent"
        Statement:
        -
          Sid: "AllowCloudFrontServicePrincipal"
          Effect: "Allow"
          Principal:
            Service: "cloudfront.amazonaws.com"
          Action: "s3:GetObject"
          Resource: !Sub "arn:aws:s3:::${S3BucketWebContents}/*"
          Condition:
            StringEquals:
              "AWS:SourceArn": !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}"

  S3BucketLog:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Sub "${OriginBucket}-log"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        -
          ServerSideEncryptionByDefault:
            SSEAlgorithm: "AES256"
          BucketKeyEnabled: true
      OwnershipControls:
        Rules:
        -
          ObjectOwnership: "BucketOwnerPreferred"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

Outputs:
  CloudFrontDistributionDomainName:
    Value: !GetAtt CloudFrontDistribution.DomainName
  WebContentsS3BucketName:
    Value: !Sub ${OriginBucket}
